package com.example.accessingdatamysql.controllers;

import com.example.accessingdatamysql.PostRepository;
import com.example.accessingdatamysql.model.Post;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class PostController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PostRepository postRepository;

    @PostMapping(path="/add_post") // Map ONLY POST Requests
    public @ResponseBody String addNewPost (@RequestParam String title
            , @RequestParam String img_url, @RequestParam String content) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Post n = new Post();
        n.setTitle(title);
        n.setImg_url(img_url);
        n.setContent(content);
        postRepository.save(n);
        return "Saved";
    }

    @RequestMapping("/delete_post")
    public void delete (@RequestParam int id) {
        postRepository.deleteById(id);
    }



    @GetMapping(path="/all_posts")
    public @ResponseBody Iterable<Post> getAllPosts() {

        // This returns a JSON or XML with the users
        return postRepository.findAll();
    }

    @PostMapping(value="post")
    @ResponseBody
    public void test(@RequestBody Post post){
        System.out.println(post.getTitle());
        System.out.println(post.getContent());
    }


}
